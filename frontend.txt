- Border
    border-style: solid;
    border-width: 5px;
    border-color: green; 
    border-radius: 10px; 
    border-radius: 50%; 

- Set bg color of an ele
    background-color: silver;

- Padding
    Distance b/w contents of an ele and border of the ele
    padding: padding-top, padding-right, padding-bottom, padding-left (in clockwise direction)

- Margin
    Distance b/w border of an ele and the surrounding elements
    If margin of an ele increases, then that ele shrinks (SINCE dist b/w its border and parent ele increases)
    margin: 20px;       -> all 4 margins are set to 20px
    If we set the margin -ve; then the ele tries to grow out of its parent ele

-   Attr Seclector
    [attr="val"]
    Ex for <input type="val"> :
    [type='text']

-   Abs v/s Relative units
    em is Relative unit; it depends on the elememts font-size
    Ex: If we set padding for an element as 1.5em; this padding depends on the size of elements font

-   Order of precedence of CSS classes
    - If we apply a style for body ele and there exitss a specific style for an h1 element inside the body,
    then the style of h1 takes precedence
    - Always the style declared the latest in <style> takes precedence over the ones declared above
    - Order of specifiying class names inside the element doesnt matter at all. 
    - Ex : ele class="cl c2" same as ele class="c2 c1"
    - Styles using id Selector Always overrides the styles defined using class Selector
    - inline styling overrides all (class Selector and id Selector)
    - prop:val !important --> this overrides all of the above ( class, id Selector and inline)

-   Hex code
    #6 digits
    2 for R, 2 for G, 2 for B
    rgb(brighness for R, G, B)

-   CSS Variables
    --var_name: value;
    Using the variable --> property : var(--var_name, fallback_value)
    Example --> background: var(--penguin-skin, black)
    Define varibales in :root Selector --> this is a Selector that maps with the HTML element

---- FLEXBOX ----

-   https://css-tricks.com/snippets/css/a-guide-to-flexbox/

-   display: flex

flex_parent props : 
-   flex-direction
-   main axis, cross axis
-   justify-content
-   align-items
-   flex-wrap

flex-item props :
-   flex-shrink
-   flex-grow
-   flex-basis
-   flex shorthand
-   order
-   align-self

---- GRID ----

On grid containers :
-   grid-template-columns
-   grid-template-rows
-   grid-column-gap
-   grid-row-gap
-   grid-gap
-   justify-items
-   align-items
-   grid-template-areas
-   repeat
-   minmax
-   auto-fill
-   auto-fit

On grid items :
-   grid-column
-   grid-row
-   justify-self
-   align-self
-   grid-area

---- Media Queries ----

---- Visual Design ----

-   text-align
-   em is relative to font size of parent
-   px is absolute unit
-   % indicates percent of its parent
-   width, height
-   strong, em, u tags
-   hr, img, br, input -> are self closing tags
-   box-shadow
-   opacity
-   text-transform
-   font-weight
-   line-height
-   pseudo-class of a CSS selector
-   p, divs, h's -> start on new line -> block elements
-   img, spans  -> continue from current line -> inline elements
-   position : relative -> used with offsets like top, bottom, left, right 
-   indicates how much the ele must be moved from where it had to be normally positioned
-   relative positioning doesnt affect the flow of display of other elements
-   position: absolute -> Locks ele in place relative to its parent container
-   this removes the ele from the normal flow of elements, unlike relative
-   NOTE: the element would be positioned absolutely based on its parent element. Therefore, we
-   need to mandatorily add position property to its parent item
-   fixed : locks wrt browser's window
-   an ele with fixed pos wont move when user scrolls

-   float: USed along with width property to specify how much horizontal space the ele requires
-   Float ele are removed from their normal flow and pushed to either left/right of parent element.

-   z-index
-   display: block -> changes inline elements to block
-   center a div -> set margin: auto; This method works for all block elements

transform
-   increase size of ele using scale()
-   applying transform on a div also applies it on its child elements
-   skewX, skewY

---- RESPONSIVE WEB DESIGN -----

-   max-width
-   viewports

------ BOOTSTRAP -----

-   Used for RESPONSIVE design -> elements get resized based on screen size
-   